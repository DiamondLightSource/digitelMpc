# digitelMpc.proto
# Stream Device Protocol for Gamma Vacuum Digitel MPC
# This protocol uses features defined in Stream Device 2
#
# Pete Owens 17-10-07
#
# Message format is:
#      <START>" "<ADR>" "<CMD>" "<DATA>" "<CKSUM><TERM>
# where
#      <START> : Start character(1 byte) = '~'
#      <ADR>   : Address(2 bytes) - address of unit in hex (defalut = 05)
#      <CMD>   : Command code (2 bytes) - hex
#      <DATA>  : Optional - depends on <CMD>
#      <CHK>   : Checksum (2 bytes) - hex
#      <TERM>  : Terminator character (1 byte) = '\r'
#
# Reply format is:
#      <ADR>" "<STA>" "<CODE>" "<DATA>" "<CKSUM><TERM>
# where
#      <ADR>   : Address(2 bytes) - address of unit in hex (defalut = 05)
#      <STA>   : Status Mnemonic(2 bytes) "OK" or "ER"
#      <CODE>  : Response code(2 bytes) Error number
#      <DATA>  : Optional - depends on <CMD>
#      <CHK>   : Checksum (2 bytes) - hex
#      <TERM>  : Terminator character (1 byte) = '\r'#
#
# Arguments:
# $1 = address: (2 hex digits - default 05)
# $2 = parameter: (ion pump/filament (1,2 or 3)


locktimeout = 5000;
terminator   = CR;
replytimeout = 1000;
readtimeout  = 1000;
#extrainput   = Ignore;

#
# Controller Protocols
#
model     { out "~ \$1 01 %01<sum8>"            ; in "\$1 OK %*i %s %0<sum8>"         ; }
version   { out "~ \$1 02 %01<sum8>"            ; in "\$1 OK %*i %s %0<sum8>"         ; }
linev     { out "~ \$1 22 %01<sum8>"            ; in "\$1 OK %*i %d %0<sum8>"         ; }
linef     { out "~ \$1 24 %01<sum8>"            ; in "\$1 OK %*i %dHZ %0<sum8>"       ; }
autost    { out "~ \$1 34 %01<sum8>"            ; in "\$1 OK %*i %{NO|YES} %0<sum8>"  ; }

setlinev  { out "~ \$1 23 %d %01<sum8>"         ; in "\$1 OK %*i %0<sum8>"            ; }
fan       { out "~ \$1 32 %{OFF|ON} %01<sum8>"  ; in "\$1 OK %*i %0<sum8>"            ; }
setautost { out "~ \$1 33 %{NO|YES} %01<sum8>"  ; in "\$1 OK %*i %0<sum8>"            ; }

reset     { out "~ \$1 07 %01<sum8>"            ; }

#
# Ion Pump Protocols
#

#
# TSP Protocols
#
tspsta    { out "~ \$1 DE %01<sum8>"            ; in "\$1 OK %*i %d %0<sum8>"         ; }
filsta    { out "~ \$1 E9 \$2 %01<sum8>"        ; in "\$1 OK %*i %d %0<sum8>"         ; }
power     { out "~ \$1 74 %01<sum8>"            ; in "\$1 OK %*i %d,W %0<sum8>"       ; }
fil       { out "~ \$1 DA %01<sum8>"            ; in "\$1 OK %*i %{1|2|3|4} %0<sum8>" ; }
left      { out "~ \$1 DA %01<sum8>"            ; 
            in "\$1 OK %*i %d,1-%(\$2.VAL)d,2-%(\$3.VAL)d,%(\$4.VAL)d,4-%*d %0<sum8>" ; }

setpower  { out "~ \$1 E2 %d,W %01<sum8>"       ; in "\$1 OK %*i %0<sum8>"            ; }
autofil   { out "~ \$1 2C %{NO|YES} %01<sum8>"  ; in "\$1 OK %*i %0<sum8>"            ; }
ctlsrc    { out "~ \$1 8B %d %01<sum8>"         ; in "\$1 OK %*i %0<sum8>"            ; }
thresh    { out "~ \$1 8B %3.1E %01<sum8>"      ; in "\$1 OK %*i %0<sum8>"            ; }
setfil    { out "~ \$1 29 %{1|2|3|4} %01<sum8>" ; in "\$1 OK %*i %0<sum8>"            ; }

tspoff    { out "~ \$1 28 %01<sum8>"            ; in "\$1 OK %*i %0<sum8>"            ; }
clear     { out "~ \$1 2B %01<sum8>"            ; in "\$1 OK %*i %0<sum8>"            ; }
