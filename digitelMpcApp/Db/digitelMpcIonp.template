#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBDEND


# digitelMpcIonp.db
# Template database for digitel MPC - Ion Pump
# Pete Owens - 30/9/03
#
# substitutions:
# device  - device name
# port    - seral port number (from device manager table)
# unit    - unit number for multi-drop serial (5 by default)
# pump    - ion pump number (1 or 2)
# size    - pump size (l/s)
################################################################################
# Read pump current
#
#% archiver 1 Monitor
#% controldesk Current readback
#
record(ai, "$(device):I") {
  field(DESC, "Pump Current")
  field(DTYP, "asyn MPC")
  field(INP, "@asyn($(port) $(unit))GET_CURRENT $(pump)")
  field(SCAN, "2 second")
  field(EGU, "A")
  field(LOPR, "0.0")
  field(HOPR, "10.0")
  field(PREC, "1")
}

################################################################################
# Read pump pressure
#
#% archiver 1 Monitor
#% controldesk Pressure readback
#
record(ai, "$(device):P") {
  field(DESC, "Pump Pressure")
  field(DTYP, "asyn MPC")
  field(INP, "@asyn($(port) $(unit))GET_PRESSURE $(pump)")
  field(SCAN, "2 second")
  field(FLNK, "$(device):PLOG")
  field(EGU, "mbar")
  field(HOPR, "1000")
  field(LOPR, "0")
  field(PREC, "11")
}

#
#% archiver 1 Monitor
#
record(calc, "$(device):PLOG") {
  field(DESC, "log Pressure")
  field(EGU, "log")
  field(CALC, "LOG(A)")
  field(INPA, "$(device):P")
  field(HOPR, "3")
  field(LOPR, "-12")
}

################################################################################
# Read pump voltage
#
#% archiver 1 Monitor
#% controldesk Voltage readback
#
# TODO this was previously a longin - is this ok as an ai?
record(ai, "$(device):V") {
  field(DESC, "Pump Voltage")
  field(DTYP, "asyn MPC")
  field(INP, "@asyn($(port) $(unit))GET_VOLT $(pump)")
  field(SCAN, "2 second")
  field(EGU, "V")
  field(LOPR, "0")
  field(HOPR, "10")
}

################################################################################
# Get HV Strapping
#
#% archiver 1 Monitor
#% controldesk HV Strapping readback
#
record(longin, "$(device):HV") {
  field(DESC, "HV Strapping")
  field(DTYP, "asyn MPC")
  field(INP, "@asyn($(port) $(unit))GET_STRAPPING $(pump)")
  field(SCAN, "10 second")
  field(EGU, "V")
  field(LOPR, "5600")
  field(HOPR, "7000")
}

################################################################################
# Get supply status
#
#% archiver 10 Monitor
#% controldesk Supply Status smon
#% alh $SEVRCOMMAND UP_MINOR alh_minor_alarm_email.pl -d "$(device):STA"
#
record(mbbi, "$(device):STA") {
  field(DESC, "Supply Status")
  field(DTYP, "Soft Channel")
  field(ZRST, "Unknown")
  field(ONST, "Waiting")
  field(TWST, "Standby")
  field(THST, "Safe-Conn")
  field(FRST, "Running")
  field(FVST, "Cool Down")
  field(SXST, "Pump Error")
  field(SVST, "HV Switched Off")
  field(EIST, "Interlock")
  field(NIST, "Shut Down")
  field(TEST, "Calibration")
  field(ELST, "Invalid")
  field(TVST, "Invalid")
  field(TTST, "Invalid")
  field(FTST, "Invalid")
  field(FFST, "Invalid")
  field(UNSV, "MAJOR")
  field(ZRSV, "MAJOR")
  field(ONSV, "MAJOR")
  field(TWSV, "MAJOR")
  field(THSV, "MAJOR")
  field(FRSV, "NO_ALARM")
  field(FVSV, "MINOR")
  field(SXSV, "MAJOR")
  field(SVSV, "MAJOR")
  field(EISV, "MAJOR")
  field(NISV, "MAJOR")
  field(TESV, "MAJOR")
  field(ELSV, "MAJOR")
  field(TVSV, "MAJOR")
  field(TTSV, "MAJOR")
  field(FTSV, "MAJOR")
  field(FFSV, "MAJOR")
}

# % archiver 10 Monitor
# % controldesk Error Code smon
record(mbbi, "$(device):ERR") {
  field(DESC, "Error Code")
  field(DTYP, "Soft Channel")
  field(ZRST, "OK")
  field(ONST, "Too many cycles")
  field(TWST, "High pressure")
  field(THST, "High current")
  field(FRST, "High pressure")
  field(FVST, "Pump power")
  field(SXST, "High current")
  field(SVST, "Short circuit")
  field(EIST, "Malfunction")
  field(NIST, "Low voltage")
  field(TEST, "Arc detect")
  field(ELST, "11")
  field(TVST, "12")
  field(TTST, "13")
  field(FTST, "14")
  field(FFST, "15")
  field(UNSV, "MINOR")
  field(ZRSV, "NO_ALARM")
  field(ONSV, "MINOR")
  field(TWSV, "MINOR")
  field(THSV, "MINOR")
  field(FRSV, "MINOR")
  field(FVSV, "MINOR")
  field(SXSV, "MINOR")
  field(SVSV, "MINOR")
  field(EISV, "MINOR")
  field(NISV, "MINOR")
  field(TESV, "MINOR")
  field(ELSV, "MINOR")
  field(TVSV, "MINOR")
  field(TTSV, "MINOR")
  field(FTSV, "MINOR")
  field(FFSV, "MINOR")
}

# Read supply status as a string
record(stringin, "$(device):SUPPLY:STATUS") {
  field(DESC, "Get Supply Status Str")
  field(FLNK, "$(device):STA:UNK")
  field(DTYP, "asyn MPC")
  field(INP, "@asyn($(port) $(unit))GET_STATUS  $(pump)")
  field(SCAN, "2 second")
}

record(bo, "$(device):STA:UNK") {
  field(DESC, "Set Unknown Status")
  field(FLNK, "$(device):STA:CALC1")
  field(DTYP, "Soft Channel")
  field(VAL, "0")
  field(OUT, "$(device):STA:NEXT")
}

record(mbbo, "$(device):STA:NEXT") {
  field(DESC, "Next Status")
  field(FLNK, "$(device):ERR:CALC")
  field(DTYP, "Soft Channel")
  field(OMSL, "supervisory")
  field(VAL, "0")
  field(OUT, "$(device):STA PP")
}

record(scalcout, "$(device):STA:CALC1") {
  field(DESC, "Calc Status 1")
  field(FLNK, "$(device):STA:CALC2")
  field(INAA, "$(device):SUPPLY:STATUS")
  field(DOPT, "Use CALC")
  field(CALC, "AA[0,1]")
}

record(scalcout, "$(device):STA:CALC2") {
  field(DESC, "Calc Status 2")
  field(FLNK, "$(device):STA:CALC3")
  field(INAA, "$(device):STA:CALC1.SVAL")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(CALC, "AA=='WA'||AA=='ST'||AA=='SA'")
  field(OCAL, "AA=='WA'?1:(AA=='ST'?2:3)")
  field(OUT, "$(device):STA:NEXT")
}

record(scalcout, "$(device):STA:CALC3") {
  field(DESC, "Calc Status 3")
  field(FLNK, "$(device):STA:CALC4")
  field(INAA, "$(device):STA:CALC1.SVAL")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(CALC, "AA=='RU'||AA=='CO'||AA=='PU'")
  field(OCAL, "AA=='RU'?4:(AA=='CO'?5:6)")
  field(OUT, "$(device):STA:NEXT")
}

record(scalcout, "$(device):STA:CALC4") {
  field(DESC, "Calc Status 4")
  field(FLNK, "$(device):STA:CALC5")
  field(INAA, "$(device):STA:CALC1.SVAL")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(CALC, "AA=='HV'||AA=='IN'||AA=='SH'")
  field(OCAL, "AA=='HV'?7:(AA=='IN'?8:9)")
  field(OUT, "$(device):STA:NEXT")
}

record(scalcout, "$(device):STA:CALC5") {
  field(DESC, "Calc Status 5")
  field(FLNK, "$(device):STA:NEXT")
  field(INAA, "$(device):STA:CALC1.SVAL")
  field(OOPT, "When Non-zero")
  field(DOPT, "Use OCAL")
  field(CALC, "AA=='CA'")
  field(OCAL, "10")
  field(OUT, "$(device):STA:NEXT")
}

record(scalcout, "$(device):ERR:CALC") {
  field(DESC, "Calc Err")
  field(INAA, "$(device):SUPPLY:STATUS")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(CALC, "INT(AA[-2,-1])")
  field(OUT, "$(device):NEXT:ERR")
  field(FLNK, "$(device):NEXT:ERR")
}

# ############################################################################
# Pump size
# 
# % archiver 10 Monitor
# % controldesk Pump Size readback
record(ai, "$(device):SIZE") {
  field(DESC, "Pump Size")
  field(DTYP, "asyn MPC")
  field(INP, "@asyn($(port) $(unit))GET_SIZE $(pump)")
  field(SCAN, "5 second")
  field(EGU, "l/s")
  field(LOPR, "0")
  field(HOPR, "1200")
}

#
#% archiver 10 Monitor
#% controldesk Pump Size setpoint
#
record(ao, "$(device):SETSIZE") {
  field(DESC, "Pump Size")
  field(DTYP, "asyn MPC")
  field(OUT, "@asyn($(port) $(unit))SET_SIZE $(pump)")
  field(PINI, "YES")
  field(DOL, "$(size)")
  field(EGU, "l/s")
  field(DRVL, "0")
  field(DRVH, "1200")
  field(LOPR, "0")
  field(HOPR, "1200")
  field(PREC, "0")
}

# ######################################################################
# Calibration factor
# 
# % archiver 10 Monitor
# % controldesk Calibration Factor readback
record(ai, "$(device):CAL") {
  field(DESC, "Calibration Factor")
  field(DTYP, "asyn MPC")
  field(INP, "@asyn($(port) $(unit))GET_CALIB_FACTOR $(pump)")
  field(SCAN, "2 second")
  field(LOPR, "0.0")
  field(HOPR, "9.99")
  field(PREC, "2")
}

#
#% archiver 10 Monitor
#% controldesk Calibration Factor setpoint
#
record(ao, "$(device):SETCAL") {
  field(DESC, "Calibration Factor")
  field(DTYP, "asyn MPC")
  field(OUT, "@asyn($(port) $(unit))SET_CALIB_FACTOR $(pump)")
  field(DRVL, "0.0")
  field(DRVH, "9.99")
  field(LOPR, "0.0")
  field(HOPR, "9.99")
  field(PREC, "2")
}

################################################################################
# Start
#
#% archiver 10 Monitor
#% controldesk Supply Status sconset
#
record(bo, "$(device):START") {
  field(DESC, "HV on/off")
  field(DTYP, "asyn MPC")
  field(OUT, "@asyn($(port) $(unit))SET_START $(pump)")
  field(ZNAM, "Start")
  field(ONAM, "Stop")
}

record(bi, "$(device):STARTING") {
  field(DESC, "Starting Pumps")
  field(PINI, "YES")
  field(INP, "0")
  field(ONAM, "Starting")
}

# #########################################################################
# Setpoints
# 
# % archiver 10 Monitor
# % controldesk Setpoint 1 readback
record(ai, "$(device):SP1") {
  field(DESC, "Setpoint 1")
  field(DTYP, "asyn MPC")
  field(INP, "@asyn($(port) $(unit))GET_SPVAL12 $(pump)")
  field(SCAN, "2 second")
  field(EGU, "mbar")
  field(LOPR, "0.0")
  field(HOPR, "1000.0")
  field(PREC, "1")
}

#
#% archiver 10 Monitor
#% controldesk Setpoint 1 setpoint
#
record(ao, "$(device):SETSP1") {
  field(DESC, "Setpoint 1")
  field(DTYP, "asyn MPC")
  field(OUT, "@asyn($(port) $(unit))SET_SPVAL12_ONP $(pump)")
  field(EGU, "mbar")
  field(DRVL, "0.0")
  field(DRVH, "1000.0")
  field(LOPR, "0.0")
  field(HOPR, "1000.0")
  field(PREC, "1")
}

# % archiver 10 Monitor
# % controldesk Setpoint 2 readback
record(ai, "$(device):SP2") {
  field(DESC, "Setpoint 2")
  field(DTYP, "asyn MPC")
  field(INP, "@asyn($(port) $(unit))GET_SPVAL12_OFFP $(pump)")
  field(SCAN, "2 second")
  field(EGU, "mbar")
  field(LOPR, "0.0")
  field(HOPR, "1000.0")
  field(PREC, "1")
}

#
#% archiver 10 Monitor
#% controldesk Setpoint 2 setpoint
#
record(ao, "$(device):SETSP2") {
  field(DESC, "Setpoint 2")
  field(DTYP, "asyn MPC")
  field(OUT, "@asyn($(port) $(unit))SET_SPVAL12_OFFP $(pump)")
  field(EGU, "mbar")
  field(DRVL, "0.0")
  field(DRVH, "1000.0")
  field(LOPR, "0.0")
  field(HOPR, "1000.0")
  field(PREC, "1")
}

record(mbbo, "$(device):NEXT:ERR") {
  field(DESC, "Next Err")
  field(DTYP, "Soft Channel")
  field(OMSL, "supervisory")
  field(OUT, "$(device):ERR PP")
}

#! Further lines contain data used by VisualDCT
#! View(0,0,0.4)
#! Record("$(device):I",40,5,0,0,"$(device):I")
#! Record("$(device):P",260,10,0,0,"$(device):P")
#! Field("$(device):P.FLNK",16777215,1,"$(device):P.FLNK")
#! Link("$(device):P.FLNK","$(device):PLOG")
#! Field("$(device):P.VAL",16777215,1,"$(device):P.VAL")
#! Record("$(device):PLOG",540,75,0,0,"$(device):PLOG")
#! Field("$(device):PLOG.INPA",16777215,0,"$(device):PLOG.INPA")
#! Link("$(device):PLOG.INPA","$(device):P.VAL")
#! Record("$(device):V",780,20,0,0,"$(device):V")
#! Record("$(device):HV",1020,20,0,0,"$(device):HV")
#! Record("$(device):STA",1340,1060,0,0,"$(device):STA")
#! Field("$(device):STA.VAL",16777215,0,"$(device):STA.VAL")
#! Record("$(device):ERR",1880,1320,0,0,"$(device):ERR")
#! Field("$(device):ERR.VAL",16777215,0,"$(device):ERR.VAL")
#! Record("$(device):SUPPLY:STATUS",60,810,0,0,"$(device):SUPPLY:STATUS")
#! Field("$(device):SUPPLY:STATUS.FLNK",16777215,1,"$(device):SUPPLY:STATUS.FLNK")
#! Link("$(device):SUPPLY:STATUS.FLNK","$(device):STA:UNK")
#! Field("$(device):SUPPLY:STATUS.VAL",16777215,1,"$(device):SUPPLY:STATUS.VAL")
#! Record("$(device):STA:UNK",380,890,0,0,"$(device):STA:UNK")
#! Field("$(device):STA:UNK.FLNK",16777215,0,"$(device):STA:UNK.FLNK")
#! Link("$(device):STA:UNK.FLNK","$(device):STA:UNK/FLNK")
#! Field("$(device):STA:UNK.OUT",16777215,1,"$(device):STA:UNK.OUT")
#! Link("$(device):STA:UNK.OUT","$(device):STA:NEXT.VAL")
#! Connector("$(device):STA:UNK/FLNK","$(device):STA:CALC1",320,1092,16777215,"",0)
#! Record("$(device):STA:NEXT",1060,1995,0,0,"$(device):STA:NEXT")
#! Field("$(device):STA:NEXT.VAL",16777215,0,"$(device):STA:NEXT.VAL")
#! Field("$(device):STA:NEXT.OUT",16777215,1,"$(device):STA:NEXT.OUT")
#! Link("$(device):STA:NEXT.OUT","$(device):STA.VAL")
#! Field("$(device):STA:NEXT.FLNK",16777215,1,"$(device):STA:NEXT.FLNK")
#! Link("$(device):STA:NEXT.FLNK","$(device):ERR:CALC")
#! Record("$(device):STA:CALC1",400,1090,0,0,"$(device):STA:CALC1")
#! Field("$(device):STA:CALC1.INAA",16777215,0,"$(device):STA:CALC1.INAA")
#! Link("$(device):STA:CALC1.INAA","$(device):STA:CALC1/INAA")
#! Field("$(device):STA:CALC1.FLNK",16777215,1,"$(device):STA:CALC1.FLNK")
#! Link("$(device):STA:CALC1.FLNK","$(device):STA:CALC2")
#! Field("$(device):STA:CALC1.SVAL",16777215,1,"$(device):STA:CALC1.SVAL")
#! Connector("$(device):STA:CALC1/INAA","$(device):SUPPLY:STATUS.VAL",280,1100,16777215,"",0)
#! Record("$(device):STA:CALC2",740,1165,0,0,"$(device):STA:CALC2")
#! Field("$(device):STA:CALC2.INAA",16777215,0,"$(device):STA:CALC2.INAA")
#! Link("$(device):STA:CALC2.INAA","$(device):STA:CALC1.SVAL")
#! Field("$(device):STA:CALC2.OUT",16777215,1,"$(device):STA:CALC2.OUT")
#! Link("$(device):STA:CALC2.OUT","$(device):STA:NEXT.VAL")
#! Field("$(device):STA:CALC2.FLNK",16777215,0,"$(device):STA:CALC2.FLNK")
#! Link("$(device):STA:CALC2.FLNK","$(device):STA:CALC2/FLNK")
#! Connector("$(device):STA:CALC2/FLNK","$(device):STA:CALC3",680,1451,16777215,"",0)
#! Record("$(device):STA:CALC3",740,1425,0,0,"$(device):STA:CALC3")
#! Field("$(device):STA:CALC3.INAA",16777215,0,"$(device):STA:CALC3.INAA")
#! Link("$(device):STA:CALC3.INAA","$(device):STA:CALC1.SVAL")
#! Field("$(device):STA:CALC3.OUT",16777215,1,"$(device):STA:CALC3.OUT")
#! Link("$(device):STA:CALC3.OUT","$(device):STA:NEXT.VAL")
#! Field("$(device):STA:CALC3.FLNK",16777215,0,"$(device):STA:CALC3.FLNK")
#! Link("$(device):STA:CALC3.FLNK","$(device):STA:CALC3/FLNK")
#! Connector("$(device):STA:CALC3/FLNK","$(device):STA:CALC4",680,1711,16777215,"",0)
#! Record("$(device):STA:CALC4",740,1685,0,0,"$(device):STA:CALC4")
#! Field("$(device):STA:CALC4.INAA",16777215,0,"$(device):STA:CALC4.INAA")
#! Link("$(device):STA:CALC4.INAA","$(device):STA:CALC1.SVAL")
#! Field("$(device):STA:CALC4.OUT",16777215,1,"$(device):STA:CALC4.OUT")
#! Link("$(device):STA:CALC4.OUT","$(device):STA:NEXT.VAL")
#! Field("$(device):STA:CALC4.FLNK",16777215,0,"$(device):STA:CALC4.FLNK")
#! Link("$(device):STA:CALC4.FLNK","$(device):STA:CALC4/FLNK")
#! Connector("$(device):STA:CALC4/FLNK","$(device):STA:CALC5",680,1971,16777215,"",0)
#! Record("$(device):STA:CALC5",740,1945,0,0,"$(device):STA:CALC5")
#! Field("$(device):STA:CALC5.INAA",16777215,0,"$(device):STA:CALC5.INAA")
#! Link("$(device):STA:CALC5.INAA","$(device):STA:CALC1.SVAL")
#! Field("$(device):STA:CALC5.OUT",16777215,1,"$(device):STA:CALC5.OUT")
#! Link("$(device):STA:CALC5.OUT","$(device):STA:NEXT.VAL")
#! Field("$(device):STA:CALC5.FLNK",16777215,1,"$(device):STA:CALC5.FLNK")
#! Link("$(device):STA:CALC5.FLNK","$(device):STA:NEXT")
#! Record("$(device):ERR:CALC",1340,2100,0,0,"$(device):ERR:CALC")
#! Field("$(device):ERR:CALC.INAA",16777215,0,"$(device):ERR:CALC.INAA")
#! Link("$(device):ERR:CALC.INAA","$(device):ERR:CALC/INAA")
#! Field("$(device):ERR:CALC.OUT",16777215,1,"$(device):ERR:CALC.OUT")
#! Link("$(device):ERR:CALC.OUT","$(device):NEXT:ERR.VAL")
#! Field("$(device):ERR:CALC.FLNK",16777215,1,"$(device):ERR:CALC.FLNK")
#! Link("$(device):ERR:CALC.FLNK","$(device):NEXT:ERR")
#! Connector("$(device):ERR:CALC/INAA","$(device):SUPPLY:STATUS.VAL",280,1620,16777215,"",0)
#! Record("$(device):SIZE",300,320,0,0,"$(device):SIZE")
#! Record("$(device):SETSIZE",40,260,0,0,"$(device):SETSIZE")
#! Field("$(device):SETSIZE.DOL",16777215,1,"$(device):SETSIZE.DOL")
#! Record("$(device):CAL",820,300,0,0,"$(device):CAL")
#! Record("$(device):SETCAL",540,305,0,0,"$(device):SETCAL")
#! Record("$(device):START",1040,310,0,0,"$(device):START")
#! Record("$(device):STARTING",1220,305,0,0,"$(device):STARTING")
#! Record("$(device):SP1",300,585,0,0,"$(device):SP1")
#! Record("$(device):SETSP1",40,570,0,0,"$(device):SETSP1")
#! Record("$(device):SP2",820,565,0,0,"$(device):SP2")
#! Record("$(device):SETSP2",540,570,0,0,"$(device):SETSP2")
#! Record("$(device):NEXT:ERR",1600,2065,0,0,"$(device):NEXT:ERR")
#! Field("$(device):NEXT:ERR.OUT",16777215,1,"$(device):NEXT:ERR.OUT")
#! Link("$(device):NEXT:ERR.OUT","$(device):ERR.VAL")
#! Field("$(device):NEXT:ERR.VAL",16777215,1,"$(device):NEXT:ERR.VAL")
