# digitelMpcIonp.template
#% macro, __doc__, Template database for digitel MPC - Ion Pump
# Pete Owens - 30/9/03
#
# substitutions:
#% macro, device, device name
#% macro, name, Object name and gui association name
#% macro, port, asyn serial port number
#% macro, unit, unit number for multi-drop serial (2 hex digits - 05 by default)
#% macro, pump, ion pump number (1 or 2)
#% macro, size, pump size (l/s)
#% macro, spon, setpoint on
#% macro, spoff, setpoint off
################################################################################

# This associates an edm screen with the template
# % gui, $(name=), edm, digitelMpcIonpControl.edl, device=$(device)

# Read pump current
#
#% controldesk Current readback
#
record(ai, "$(device):I") {
    field(DESC, "Pump Current")
    field(DTYP, "stream")
    field(INP,  "@digitelMpc.proto current($(unit),$(pump)) $(port)")
    field(SCAN, "1 second")
    field(EGU,  "A")
    field(LOPR, "0.0")
    field(HOPR, "10.0")
    field(PREC, "1")
}
################################################################################
# Read pump pressure
#
#% archiver 10 Monitor
#% controldesk Pressure readback
#
record(ai, "$(device):P") {
    field(DESC, "Pump Pressure")
    field(DTYP, "stream")
    field(INP,  "@digitelMpc.proto pressure($(unit),$(pump)) $(port)")
    field(SCAN, "1 second")
    field(FLNK, "$(device):PLOG")
    field(EGU,  "mbar")
    field(HOPR, "1000")
    field(LOPR, "1.0E-12")
    field(PREC, "11")
}
record(calcout, "$(device):ADEL")
{
    field(DESC, "deadband")
    field(CALC, "A/B")
    field(OUT,  "$(device):P.ADEL")
    field(INPA, "$(device):P")
#    field(INPB, "4")
#    field(INPB, "3")
    field(INPB, "2")
    field(SCAN, "10 second")
}
#
#% archiver 1 Monitor
#
record(calc, "$(device):PLOG")
{
    field(DESC, "log Pressure")
    field(EGU,  "log")
    field(CALC, "LOG(A)")
    field(INPA, "$(device):P MS")
    field(HOPR, "3")
    field(LOPR, "-12")
#    field(ADEL, "0.1")
#    field(ADEL, "0.125")
#    field(ADEL, "0.176")
    field(ADEL, "0.25")
}
################################################################################
# Read pump voltage
#
#% controldesk Voltage readback
#
record(longin, "$(device):V") {
    field(DESC, "Pump Voltage")
    field(DTYP, "stream")
    field(INP,  "@digitelMpc.proto voltage($(unit),$(pump)) $(port)")
    field(SCAN, "1 second")
    field(EGU,  "V")
    field(LOPR, "0")
    field(HOPR, "10")
}
################################################################################
# Get HV Strapping
#
#% archiver 1 Monitor
#% controldesk HV Strapping readback
#
record(longin, "$(device):HV") 
{
    field(DESC, "HV Strapping")
    field(DTYP, "stream")
    field(INP,  "@digitelMpc.proto strap($(unit),$(pump)) $(port)")
    field(SCAN, "10 second")
    field(EGU,  "V")
    field(LOPR, "5600")
    field(HOPR, "7000")
}
################################################################################
# Get supply status
#
#% archiver 10 Monitor
#% controldesk Supply Status smon
#% alh $SEVRCOMMAND UP_MINOR alh_minor_alarm_email.pl -d "$(device):STA"
#% $(alh=None) $SEVRCOMMAND UP_ANY dls-alh-handler.py $(device):STA
record(mbbi, "$(device):STA")
{
    field(DESC, "Supply Status")
    field(DTYP, "stream")
    field(INP,  "@digitelMpc.proto status($(unit),$(pump)) $(port)")
    field(SCAN, "1 second")
    field(ZRST, "Unknown")
    field(ONST, "Waiting")
    field(TWST, "Standby")
    field(THST, "Safe-Conn")
    field(FRST, "Running")
    field(FVST, "Cool Down")
    field(SXST, "Pump Error")
    field(SVST, "HV Switched Off")
    field(EIST, "Interlock")
    field(NIST, "Shut Down")
    field(TEST, "Calibration")
    field(ELST, "Invalid")
    field(TVST, "Invalid")
    field(TTST, "Invalid")
    field(FTST, "Invalid")
    field(FFST, "Invalid")
    field(UNSV, "MAJOR")
    field(ZRSV, "MAJOR")
    field(ONSV, "MAJOR")
    field(TWSV, "MAJOR")
    field(THSV, "MAJOR")
    field(FRSV, "NO_ALARM")
    field(FVSV, "MINOR")
    field(SXSV, "MAJOR")
    field(SVSV, "MAJOR")
    field(EISV, "MAJOR")
    field(NISV, "MAJOR")
    field(TESV, "MAJOR")
    field(ELSV, "MAJOR")
    field(TVSV, "MAJOR")
    field(TTSV, "MAJOR")
    field(FTSV, "MAJOR")
    field(FFSV, "MAJOR")
    field(FLNK, "$(device):ERRSEL")
}

record(seq, "$(device):ERRSEQ")
{
    field(DESC, "Get Error if applicable")
    field(SCAN, "Passive")
    field(SELM, "Specified")
    field(SELN, "1")
    field(DOL1, "0")
    field(LNK1, "$(device):ERR PP MS")
    field(DOL2, "$(device):ERRGET PP MS")
    field(LNK2, "$(device):ERR PP MS")
}

record(longin, "$(device):ERRGET")
{
    field(DESC, "Get Error Code")
    field(DTYP, "stream")
    field(INP,  "@digitelMpc.proto err($(unit),$(pump)) $(port)")
    field(SCAN, "Passive")
}

record(calcout, "$(device):ERRSEL")
{
    field(DESC, "Choose which error source")
    field(INPA, "$(device):STA MS")
    field(CALC, "A>=3?2:1")
    field(OUT, "$(device):ERRSEQ.SELN PP MS")
}

#
#% archiver 10 Monitor
#% controldesk Error Code smon
#
record(mbbi, "$(device):ERR")
{
    field(DESC, "Error Code")
    field(DTYP, "Soft Channel")
    field(SCAN, "Passive")
    field(ZRST, "OK")
    field(ONST, "Too many cycles")
    field(TWST, "High pressure")
    field(THST, "High current")
    field(FRST, "High pressure")
    field(FVST, "Pump power")
    field(SXST, "High current")
    field(SVST, "Short circuit")
    field(EIST, "Malfunction")
    field(NIST, "Low voltage")
    field(TEST, "Arc detect")
    field(ELST, "11")
    field(TVST, "12")
    field(TTST, "13")
    field(FTST, "14")
    field(FFST, "15")
    field(UNSV, "MINOR")
    field(ZRSV, "NO_ALARM")
    field(ONSV, "MINOR")
    field(TWSV, "MINOR")
    field(THSV, "MINOR")
    field(FRSV, "MINOR")
    field(FVSV, "MINOR")
    field(SXSV, "MINOR")
    field(SVSV, "MINOR")
    field(EISV, "MINOR")
    field(NISV, "MINOR")
    field(TESV, "MINOR")
    field(ELSV, "MINOR")
    field(TVSV, "MINOR")
    field(TTSV, "MINOR")
    field(FTSV, "MINOR")
    field(FFSV, "MINOR")
}
################################################################################
# Pump size
#
#% archiver 10 Monitor
#% controldesk Pump Size readback
#
record(longin, "$(device):SIZE") {
    field(DESC, "Pump Size")
    field(DTYP, "stream")
    field(INP,  "@digitelMpc.proto size($(unit),$(pump)) $(port)")
    field(SCAN, "10 second")
    field(EGU,  "l/s")
    field(LOPR, "0")
    field(HOPR, "1200")
}
#
#% archiver 10 Monitor
#% controldesk Pump Size setpoint
#
record(ao, "$(device):SETSIZE") {
    field(DESC, "Pump Size")
    field(DTYP, "stream")
    field(OUT,  "@digitelMpc.proto setsize($(unit),$(pump)) $(port)")
    field(PINI, "YES")
    field(DOL,  "$(size)")
    field(EGU,  "l/s")
    field(DRVL, "0")
    field(DRVH, "1200")
    field(LOPR, "0")
    field(HOPR, "1200")
    field(PREC, "0")
}
################################################################################
# Calibration factor
#
#% archiver 10 Monitor
#% controldesk Calibration Factor readback
#
record(ai, "$(device):CAL") {
    field(DESC, "Calibration Factor")
    field(DTYP, "stream")
    field(INP,  "@digitelMpc.proto cal($(unit),$(pump)) $(port)")
    field(SCAN, "10 second")
    field(LOPR, "0.0")
    field(HOPR, "9.99")
    field(PREC, "2")
}
#
#% archiver 10 Monitor
#% controldesk Calibration Factor setpoint
#
record(ao, "$(device):SETCAL") {
    field(DESC, "Calibration Factor")
    field(DTYP, "stream")
    field(OUT,  "@digitelMpc.proto setcal($(unit),$(pump)) $(port)")
    field(DRVL, "0.0")
    field(DRVH, "9.99")
    field(LOPR, "0.0")
    field(HOPR, "9.99")
    field(PREC, "2")
}
################################################################################
# Start
#
#% archiver 10 Monitor
#% controldesk Supply Status scon
#
record(bo, "$(device):START")
{
    field(DESC, "HV on/off")
    field(DTYP, "stream")
    field(OUT,  "@digitelMpc.proto start($(unit),$(pump)) $(port)")
    field(ZNAM, "Stop")
    field(ONAM, "Start")
}
record(bi,"$(device):STARTING")
{
    field(DESC, "Starting Pumps")
    field(PINI, "YES")
    field(INP,  "0")
    field(ZNAM, "")
    field(ONAM, "Starting")
}
################################################################################
# Setpoints
#
#% archiver 10 Monitor
#% controldesk Setpoint 1 readback
#
record(ai, "$(device):SP1") {
    field(DESC, "Setpoint On")
    field(DTYP, "stream")
    field(INP,  "@digitelMpc.proto sps($(unit),$(pump),$(device)) $(port)")
    field(SCAN, "10 second")
    field(EGU,  "mbar")
    field(LOPR, "0.0")
    field(HOPR, "1000.0")
    field(PREC, "1")
}
#
#% archiver 10 Monitor
#% controldesk Setpoint 2 readback
#
record(ai, "$(device):SP2") {
    field(DESC, "Setpoint Off")
    field(EGU,  "mbar")
    field(LOPR, "0.0")
    field(HOPR, "1000.0")
    field(PREC, "1")
}
#
#% archiver 10 Monitor
#% controldesk Setpoint 1 setpoint
#
record(ao, "$(device):SETSP1") {
    field(VAL,  "$(spon=0)")
    field(DESC, "Setpoint On")
    field(EGU,  "mbar")
    field(DRVL, "1.0E-10")
    field(DRVH, "1.0E-4")
    field(LOPR, "0.0")
    field(HOPR, "1000.0")
    field(PREC, "1")
    field(FLNK, "$(device):SETSPS")
}
#
#% archiver 10 Monitor
#% controldesk Setpoint 2 setpoint
#
record(ao, "$(device):SETSP2") {
    field(VAL,  "$(spoff=0)")
    field(DESC, "Setpoint Off")
    field(EGU,  "mbar")
    field(DRVL, "1.0E-10")
    field(DRVH, "1.0E-4")
    field(LOPR, "0.0")
    field(HOPR, "1000.0")
    field(PREC, "1")
    field(FLNK, "$(device):SETSPS")
}
record(calcout, "$(device):SETSPS") {
    field(DESC, "Output Setpoints")
    field(DTYP, "stream")
    field(OUT,  "@digitelMpc.proto setsps($(unit),$(pump)) $(port)")
    field(INPA, "$(device):SETSP1")
    field(INPB, "$(device):SETSP2")
    field(INPC, "$(pump)")
    field(INPD, "1.01E-10")
    field(INPE, "9.99E-5")
    field(CALC, "((A<D)||(B>E))?0:C")
    field(PINI, "YES")
}
################################################################################
# Text string on front panel
#
record(stringout, "$(device):SETTEXT") {
    field(DESC, "Text String")
    field(VAL , "$(device)")
    field(DTYP, "stream")
    field(OUT,  "@digitelMpc.proto settext($(unit),$(pump)) $(port)")
    field(PINI, "YES")
}
################################################################################


